morph<-as.matrix(data[,c("Area","Eccentricity",
"Solidity",
"Extent",
"Perimeter")])
x<-imcExperiment(cellIntensity=t(normExp),
coordinates=spatial,
neighborHood=as.matrix(data[,grepl("neighbour_",colnames(data))]),
network=phenotypes,
distance=matrix(1,nrow=nrow(data),ncol=10),
morphology=morph,
panel=colnames(normExp),
uniqueLabel=paste0(data$ImageId,"_",data$CellId),
ROIID=data.frame(ROIID=data$ImageId))
## explore the container.
dim(assay(x))
colData(x)$treatment<-DataFrame(treatment=rep('none',1000))
head(colData(x))
head( colnames(x))
rownames(x)
## Intensity
all(t(cellIntensity(x))==normExp)
head(t(cellIntensity(x)))
##coordinate
all(getCoordinates(x)==spatial)
head(getCoordinates(x))
#neighbor attraction data form histoCAT
all(getNeighborhood(x)==as.matrix(data[,grepl("neighbour_",colnames(data))]))
head(getNeighborhood((x)))
##phenotype cluster ID
head(getNetwork(x))
all(getNetwork(x)==phenotypes)
###distance calculations
head(getDistance(x))
##morphology
all(getMorphology(x)==morph)
head(getMorphology(x))
##uniqueLabel
head(getLabel(x))
all(getLabel(x)==paste0(data$ImageId,"_",data$CellId) )
x
pca_data <- prcomp(t(counts(x)), rank=50)
pca_data
reducedDim(x)
reducedDim(x)
?reducedDims
list(PCA=pca_data$x, TSNE=data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2))
head(data)
reducedDims(x) <- list(PCA=pca_data$x, TSNE=data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2))
reducedDims(x,withDimnames=TRUE) <- list(PCA=pca_data$x, TSNE=data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2))
pca_data$x
rownames(pca_data$x)
colnames(x)
tsDat<-data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2,row.names=colnames(x))
reducedDims(x,withDimnames=TRUE) <- list(PCA=pca_data$x, TSNE=tsDat)
### inherited accessor.
pca_data <- prcomp(t(counts(x)), rank=50)
tsDat<-data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2,row.names=colnames(x))
reducedDims(x,withDimnames=TRUE) <- list(PCA=pca_data$x, TSNE=tsDat)
x
dim(reducedDims(x)$PCA)
dim(reducedDims(x)$TSNE)
imc<-x
x<-NULL
### create  phenotypes via Rphenograph
##run phenograph
library(Rphenograph)
library(igraph)
phenos<-Rphenograph(t(cellIntensity(imc)),k=35)
pheno.labels<-as.numeric(igraph::membership(phenos[[2]]))
getNetwork(imc)<-data.frame(cell_clustering=pheno.labels)
head( getNetwork(imc))
##plot phenograph
#plot_clustering_heatmap_wrapper(myExperiment=imc)
### reading in a directory of histoCAT csv files.
##need to reconstruct the fold revised IMC data.
##merges a folder full of histoCAT csv files.
# use morphology and the 1-10 neighbors.
dataSet<-NULL
for(i in c("case8.csv","case5.csv")){
message(i)
fpath <- system.file("extdata", i, package="imcExperiment")
case1<-read.csv(fpath)
proteins<-colnames(case1)[grepl("Cell_",colnames(case1))]
neig<-colnames(case1)[grepl("neighbour_",colnames(case1))][1:10]
case1<-case1[,c("ImageId","CellId","X_position","Y_position",proteins,
"Area",
"Eccentricity",
"Solidity",
"Extent",
"Perimeter",
neig)]
dataSet<-rbind(dataSet,case1)
}
expr<-dataSet[,proteins]
normExp<-percentilenormalize(data=expr,percentile=0.99)
normExp<-as.matrix(normExp)
boxplot(normExp)
##spatial component
spatial<-(dataSet[,c("X_position","Y_position")])
spatial<-as.matrix(spatial)
##uniqueLabel
uniqueLabel<-paste0(dataSet[,"ImageId"],"_",dataSet[,"CellId"])
##not yet assigned
phenotypes<-matrix(0,nrow(dataSet),1)
ROIID=data.frame(ROIID=dataSet[,"ImageId"])
morph<-dataSet[,c("Area",
"Eccentricity",
"Solidity",
"Extent",
"Perimeter")]
x<-imcExperiment(cellIntensity=t(normExp),
coordinates=spatial,
neighborHood=as.matrix(dataSet[,grepl("neighbour_",colnames(dataSet))]),
network=phenotypes,
distance=matrix(1,nrow=nrow(dataSet),ncol=10),
morphology=morph,
panel=colnames(normExp),
uniqueLabel=uniqueLabel,
ROIID=ROIID)
x
#require(Rphenograph); library(igraph)
#phenos<-Rphenograph(t(cellIntensity(x)),k=35)
# pheno.labels<-as.numeric(membership(phenos[[2]]))
# getNetwork(x)<-data.frame(cell_clustering=pheno.labels)
#  head(getNetwork(x))
##plot phenograph
#plot_clustering_heatmap_wrapper(myExperiment=x)
x
devtools::document9)
devtools::document()
devtools::build_manual()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::document()
library(imcExperiment)
devtools::build_manual()
devtools::document()
data('data')
data
data("imcData")
data("imcdata")
library(imcExperiment)
data("imcdata")
ls()
imcData
imcData
imcdata<-imcData
imcdata
save(imcdata,file="~\GithubRepos/Rstudio-Github/imcExperiment/data/imcdata.rda")
save(imcdata,file="~/GithubRepos/Rstudio-Github/imcExperiment/data/imcdata.rda")
library(imcExperiment)
library(imcExperiment
)
data('imcdata')
imcdata
devtools::build_manual()
devtools::document()
data("data")
data
colnames(data)
colnames(dat)
colnames(data)
gsub("Cell_","",colnames(data))
colnames(data)<-gsub("Cell_","",colnames(data))
colnames(data)
colnames(data)[3:36]<-paste0("marker",seq_len(36))
colnames(data)[3:36]<-paste0("marker",seq_len(33))
colnames(data)[3:36]<-paste0("marker",seq_len(32))
colnames(data)[3:36]<-paste0("marker",seq_len(34))
colnames(data)
data<-data[,c(-60,-61,-63,-64,-65,-68,,-69,-70,-71,-72,-73)]
data[,c(-60,-61,-63,-64,-65,-68,-69,-70,-71,-72,-73)]
data<-data[,c(-60,-61,-63,-64,-65,-68,-69,-70,-71,-72,-73)]
head(data)
colnames(data)
devtools::document()
library(imcExperiment)
library(imcExperiment)
showClass("imcExperiment")
#10 cells with 10 proteins
# 10 neighbors
# and square distance matrix
# note that for SCE objects the columns are the cells, and rows are proteins
x<-imcExperiment(cellIntensity=matrix(1,nrow=10,ncol=10),
coordinates=matrix(1,nrow=10,ncol=2),
neighborHood=matrix(1,nrow=10,ncol=10),
network=data.frame(matrix(1,nrow=10,ncol=10)),
distance=matrix(1,nrow=10,ncol=10),
morphology=matrix(1,nrow=10,ncol=10),
uniqueLabel=paste0("A",seq_len(10)),
panel=letters[1:10],
ROIID=data.frame(ROIID=rep("A",10)))
#7 cells with 10 proteins
# but the spatial information is 10 rows and this will fail to build.
#x<-imcExperiment(cellIntensity=matrix(1,nrow=7,ncol=10),
#	coordinates=matrix(1,nrow=10,ncol=2),
#	neighborHood=matrix(1,nrow=10,ncol=20),
#	network=matrix(1,nrow=10,ncol=3),
#	distance=matrix(1,nrow=10,ncol=2),
#	uniqueLabel=rep("A",10),
#	ROIID=data.frame(ROIID=rep("A",10)))
#get cellintensities
cellIntensity(x)
#set intensities
newIn<-matrix(rnorm(100,2,5),nrow=10,ncol=10)
rownames(newIn)<-rownames(x)
colnames(newIn)<-colnames(x)
cellIntensity(x)<-newIn
cellIntensity(x)==newIn
# if we want to store both the raw and normalized values in assays we can.
assays(x,withDimnames = FALSE)$raw<-matrix(1,nrow=10,ncol=10)
#store the normalized values.
cellIntensity(x)<-asinh(counts(x)/0.5)
all(cellIntensity(x)==asinh(assays(x)$counts/0.5))
x
## access the coordinates
getCoordinates(x)
getCoordinates(x)<-matrix(rnorm(20,0,10),nrow=10,ncol=2)
head(  getCoordinates(x))
## access the neighborhood profile.  Note each row must equal the number of cells, but the columns can be extended depending on the radius of interactions.
## access the coordinates
getNeighborhood(x)
getNeighborhood(x)<-matrix(rnorm(100,1,5),nrow=10,ncol=10)
head( getNeighborhood(x))
## get the distance usually a square matrix, or can be just first nearest etc.
getDistance(x)
getDistance(x)<-matrix(rnorm(100,1,5),nrow=10,ncol=10)
head(getDistance(x))
# get morphological features
getMorphology(x)
getMorphology(x)<-matrix(rnorm(100,1,5),nrow=10,ncol=60)
head(getMorphology(x))
## for each cell we can obtain the ROI that it belongs to
rowData(x)
## if we want to add patient features to each ROI we can
metas<-data.frame(ROIID=factor(rep("A",10)),treatment=factor(rep('none',10)))
colData(x)<-DataFrame(metas)
##other slots for covariates
metadata(x)$experiment<-'test'
metadata(x)
### load the data from package.
library(imcExperiment)
##load the data 1000 cells from IMC experiment.
data(data)
dim(data)
##output from histoCAT to R
expr<-data[,3:36]
normExp<-percentilenormalize(data=expr,percentile=0.99)
normExp<-as.matrix(normExp)
##spatial component
spatial<-(data[,c("X_position","Y_position")])
spatial<-as.matrix(spatial)
##uniqueLabel
uniqueLabel<-paste0(data[,"ImageId"],"_",data[,"CellId"])
phenotypes<-data[,grepl("Phenograph",colnames(data))]
morph<-as.matrix(data[,c("Area","Eccentricity",
"Solidity",
"Extent",
"Perimeter")])
x<-imcExperiment(cellIntensity=t(normExp),
coordinates=spatial,
neighborHood=as.matrix(data[,grepl("neighbour_",colnames(data))]),
network=phenotypes,
distance=matrix(1,nrow=nrow(data),ncol=10),
morphology=morph,
panel=colnames(normExp),
uniqueLabel=paste0(data$ImageId,"_",data$CellId),
ROIID=data.frame(ROIID=data$ImageId))
## explore the container.
dim(assay(x))
colData(x)$treatment<-DataFrame(treatment=rep('none',1000))
head(colData(x))
head( colnames(x))
rownames(x)
## Intensity
all(t(cellIntensity(x))==normExp)
head(t(cellIntensity(x)))
##coordinate
all(getCoordinates(x)==spatial)
head(getCoordinates(x))
#neighbor attraction data form histoCAT
all(getNeighborhood(x)==as.matrix(data[,grepl("neighbour_",colnames(data))]))
head(getNeighborhood((x)))
##phenotype cluster ID
head(getNetwork(x))
all(getNetwork(x)==phenotypes)
###distance calculations
head(getDistance(x))
##morphology
all(getMorphology(x)==morph)
head(getMorphology(x))
##uniqueLabel
head(getLabel(x))
all(getLabel(x)==paste0(data$ImageId,"_",data$CellId) )
### inherited accessor.
pca_data <- prcomp(t(counts(x)), rank=50)
tsDat<-data.frame(tsne.x=data$tSNE4148542692_1,tsne.y=data$tSNE4148542692_2,row.names=colnames(x))
reducedDims(x,withDimnames=TRUE) <- list(PCA=pca_data$x, TSNE=tsDat)
x
dim(reducedDims(x)$PCA)
dim(reducedDims(x)$TSNE)
imc<-x
x<-NULL
### reading in a directory of histoCAT csv files.
##need to reconstruct the fold revised IMC data.
##merges a folder full of histoCAT csv files.
# use morphology and the 1-10 neighbors.
dataSet<-NULL
for(i in c("case8.csv","case5.csv")){
message(i)
fpath <- system.file("extdata", i, package="imcExperiment")
case1<-read.csv(fpath)
proteins<-colnames(case1)[grepl("Cell_",colnames(case1))]
neig<-colnames(case1)[grepl("neighbour_",colnames(case1))][1:10]
case1<-case1[,c("ImageId","CellId","X_position","Y_position",proteins,
"Area",
"Eccentricity",
"Solidity",
"Extent",
"Perimeter",
neig)]
dataSet<-rbind(dataSet,case1)
}
expr<-dataSet[,proteins]
normExp<-percentilenormalize(data=expr,percentile=0.99)
normExp<-as.matrix(normExp)
boxplot(normExp)
##spatial component
spatial<-(dataSet[,c("X_position","Y_position")])
spatial<-as.matrix(spatial)
##uniqueLabel
uniqueLabel<-paste0(dataSet[,"ImageId"],"_",dataSet[,"CellId"])
##not yet assigned
phenotypes<-matrix(0,nrow(dataSet),1)
ROIID=data.frame(ROIID=dataSet[,"ImageId"])
morph<-dataSet[,c("Area",
"Eccentricity",
"Solidity",
"Extent",
"Perimeter")]
x<-imcExperiment(cellIntensity=t(normExp),
coordinates=spatial,
neighborHood=as.matrix(dataSet[,grepl("neighbour_",colnames(dataSet))]),
network=phenotypes,
distance=matrix(1,nrow=nrow(dataSet),ncol=10),
morphology=morph,
panel=colnames(normExp),
uniqueLabel=uniqueLabel,
ROIID=ROIID)
x
#require(Rphenograph); library(igraph)
#phenos<-Rphenograph(t(cellIntensity(x)),k=35)
# pheno.labels<-as.numeric(membership(phenos[[2]]))
# getNetwork(x)<-data.frame(cell_clustering=pheno.labels)
#  head(getNetwork(x))
##plot phenograph
#plot_clustering_heatmap_wrapper(myExperiment=x)
##store the ROIID in the metadata columns.
##access the unique cell labels.
tail(getLabel(x))
roi<-subsetCase(x,372149 )
roi
table(sapply(strsplit(getLabel(roi),"_"),function(x) x[1]))
##you can append more clinical features to the columns of the sampleDat data.frame.
H<-imcExperimentToHyperFrame(imcExperiment=x,phenotypeToUse = 1)
helper<-function(pp=NULL,i=NULL,j=NULL){
ps<-split(pp)
nnd<-nncross(ps[[i]],ps[[j]])
}
## 1-NN analysis.
## compare cluster 10 to cluster 9
#eachNND<-with(H,helper(pp=point,i="10",j="8"))
## first choose 2 clusters to compare.
# sapply(eachNND,function(x) mean(x[,"dist"]))
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
library(imcExperiment)
devtools::document()
devtools::build_manual()
devtools::document()
library(imcExperiment)
devtools::document()
devtools::build_manual()
library(imcExperiment)
data(data)
head(data)
colnames(data)
load("~\GithubRepos/Rstudio-Github/data.rda")
load("~/GithubRepos/Rstudio-Github/data.rda")
head(data)
load("~/GithubRepos/Rstudio-Github/imcExperiment.Rcheck/imcExperiment/data/data.rda")
head(data)
load("~/GithubRepos/Rstudio-Github/imcExperiment/data/data.rda")
head(data)
colnames(data)
colnames(data)[3:36]
colnames(data)[3:36]<-paste0("marker",seq_len(34))
head(data0)
head(data)
data[,c(-60,-61,-63,-64,-65,-68-69,-70,-71,-72,-73)]
data<-data[,c(-60,-61,-63,-64,-65,-68-69,-70,-71,-72,-73)]
colnames(data)
data<-data[,c(-63,-64)]
head(data)
save(data,file="~/GithubRepos/Rstudio-Github/imcExperiment/data/data.rda")
head(data)
save(data,file="~/GithubRepos/Rstudio-Github/data.rda")
library(imcExperiment)
devtools::build_manual()
devtools::document()
library(imcExperiment)
load("~/GithubRepos/Rstudio-Github/imcExperiment/data/data.rda")
save(data,file="~/GithubRepos/Rstudio-Github/imcExperiment/data/data.rda",compress='xz')
load("~/GithubRepos/Rstudio-Github/imcExperiment/data/imcdata.rda")
save(imcdata,file="~/GithubRepos/Rstudio-Github/imcExperiment/data/imcdata.rda",compress='xz')
library(imcExperiment)
BiocCheck::BiocCheck("~/GithubRepos/Rstudio-Github/imcExperiment/")
BiocCheck::BiocCheck("~/GithubRepos/Rstudio-Github/imcExperiment/")
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
BiocCheck::BiocCheck("~/GithubRepos/Rstudio-Github/imcExperiment/")
data(imcdata)
cellIntensity(imcdata)
dim(cellIntensity(imcdata))
x<-asinh(counts(imcdata))
dim(x)
head(x)
getNeighborhood(imcdata)
x<-matrix(1,nrow=ncol(imcdata),ncol=2)
head(x)
`getNeighborhood(imcdata)<-x
''
`getNeighborhood(imcdata)<-x
getNeighborhood(imcdata)<-x
x<-getNetwork(imcdata)
head(x)
x<-data.frame(ID=seq_len(ncol(imcdata)))
head(x)
getNetwork(imcdata)<-x
getDistance(x)
data(imcdata)
getDistance(imcdata)
getDistance(imcdata)x<-matrix(1,nrow=ncol(imcdata),ncol=4)
x<-matrix(1,nrow=ncol(imcdata),ncol=4)
getMorphology(imcdata)<-x
data(imcdata)
imcdata
coldata(imcData)
colData(imcData)
colData(imcdata)
colData(imcdata)$ROIID
colData(imcdata)$ROIID[1]
myCase<-subsetCase(imcdata,"30-BM16-202_7Pre_s1_p1_r4_a4_ac")
myCase
tail(colData(imcdata)$ROIID)
myCases<-selectCases(imcdata,c("30-BM16-202_7Pre_s1_p1_r4_a4_ac","B17_350_14post_s1_p1_r5_a5_ac"))
myCases
devtools::document()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
library(imcExperiment)
data(imcdata)
imcdata
getNetwork(imcdata)
H<-imcExperimentToHyperFrame(imcExperiment=imcdata,phenotypeToUse = 1)
eachNND<-with(H,helper(pp=point,i="10",j="7"))
data(data)
expr<-data[,3:36]
normExp<-percentilenormalize(data=expr,percentile=0.99)
devtools::build_manual()
devtools::build_manual()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::document()
library(imcExperiment)
library(spatstat.geom)
with
?with
data(imcdata)
H<-imcExperimentToHyperFrame(imcExperiment=imcdata,phenotypeToUse = 1)
helper<-function(pp=NULL,i=NULL,j=NULL){
ps<-split(pp)
nnd<-nncross(ps[[i]],ps[[j]])}
with(H,helper(pp=point,i="10",j="7"))
eachNND<-with(H,helper(pp=point,i="10",j="7"))
?nncross
devtools::document()
devtools::build_manual()
devtools::document()
library(imcExperiment)
library(imcExperiment)
devtools::document()
devtools::build_manual()
library(imcExperiment)
BiocCheck::BiocCheck("~/GithubRepos/Rstudio-Github/imcExperiment/")
BiocCheck::BiocCheck("~/GithubRepos/Rstudio-Github/imcExperiment/")
