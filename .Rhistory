"Cell_208Pb_Pb208",
"Cell_80ArAr_ArAr80")
dna<-c("Cell_191Ir_Ir191",
"Cell_193Ir_Ir193")
lineage<-c("Cell_CD11b_Sm149",
"Cell_CD138_Eu151",
"Cell_CD14_Nd144",
"Cell_CD15_Dy164",
"Cell_CD163_Gd155",
"Cell_CD16_Nd146",
"Cell_CD20_Sm147",
"Cell_CD31_Dy161",
"Cell_CD3_Er170" ,
"Cell_CD4_Gd156",
"Cell_CD68_Nd150",
"Cell_CD8a_Dy162",
"Cell_FOXP3_Dy163",
"Cell_NKG2A_Nd143",
"Cell_NKG2D_Nd148",
"Cell_NKp46_Er166")
induc<-c("Cell_Caspase3_Lu175",
"Cell_Granzyme_Er167",
"Cell_HLAABC_Yb172",
"Cell_HLADR_Yb174",
"Cell_HLAE_Sm152",
"Cell_Histone3_Yb171",
"Cell_IDO_Yb173" ,
"Cell_Ki67_Er168" ,
"Cell_LAG3_Eu153" ,
"Cell_MUM1_Pr141",
"Cell_PD1_Ho165",
"Cell_PDL1_Tb159" ,
"Cell_Reolysin_Gd160",
"Cell_TIM3_Sm154",
"Cell_ULBP256_Yb176")
##caspase is empty blank channel.
# "Cell_Caspase_Lu175" )
morph<-c("Area",
"Eccentricity",
"Solidity",
"Extent",
"EulerNumber",
"Perimeter",
"MajorAxisLength",
"MinorAxisLength",
"Orientation",
"Percent_Touching",
"Number_Neighbors")
neighbors<-colnames(mm)[grepl("neighbour_",colnames(mm))]
netinfo<-colnames(mm)[grepl("Phenograph",colnames(mm))]
##  containerize the data
#omit the background channels.
ex<-mm[,c(lineage,induc,dna)]
rownames(ex)<-mm$uniqueLabel
## FIX ME :  needa way to subset flexibly the IMC experiment.
patientData<-DataFrame(ROIID=mm$ROIID,key[match(mm$ROIID,key$ROIID),])
## misisng clinical information "30-BM17-186_s0_p2_r1_a1_ac"
id<-which(!is.na(patientData$ROIID.1))
##manually subset
ex<-ex[id,]
## For CytofRUV we need Time and Event_length
ex$Time<-rnorm(nrow(ex))
ex$Event_length<-rnorm(nrow(ex))
###IMC container
showClass("imcExperiment")
################
imc<-imcExperiment(cellIntensity=t(ex),
coordinates=mm[id,c("X_position","Y_position")],
neighborHood=mm[id,neighbors],
network=mm[id,netinfo],
distance=matrix(1,nrow=length(id),ncol=2),
morphology=mm[id,morph],
uniqueLabel=mm[id,'uniqueLabel'],
panel=c(colnames(mm[id,c(lineage,induc,dna)]),"Time","Event_length"),
ROIID=mm[id,'ROIID'])
## normalize and check the settor
## add the raw and normalized expression intensity into the assays slot.
assays(imc)$raw_counts<-counts(imc)
all(counts(imc)==assays(imc)$raw_counts)
all(counts(imc)==t(ex))
all(t(counts(imc))==t(assays(imc)$raw_counts))
##asinh normalize with co-factor of 5.
#test<-asinh(t(counts(imc))/5)
test<-mynormalize(data=t(counts(imc)),percentile=0.99)
all( apply(test,2,max)==1)
all(apply(test,2,min)==0)
logcounts(imc)<-t(asinh(test))
all(t(logcounts(imc))==asinh(test))
assays(imc)$minmax_counts<-t(test)
cellIntensity(imc)<-t(test)
## the settor and gettor work to match.
stopifnot( all(t(cellIntensity(imc))==test))
## spatial data
head(getCoordinates(imc))
all(getCoordinates(imc)==mm[match(getLabel(imc),mm$uniqueLabel),c("X_position","Y_position")])
##neighborhood data (only checking 1-6 neighbors for QC, we have NAs.)
head(getNeighborhood(imc))
all(getNeighborhood(imc)[,1:6]==mm[match(getLabel(imc),mm$uniqueLabel),neighbors[1:6]])
##checking network access
head(getNetwork(imc))
all(getNetwork(imc)[,1]==mm[match(getLabel(imc),mm$uniqueLabel),netinfo[1]])
par(mar=c(2,2,2,2),mfrow=c(7,7))
for(i in c(lineage,induc)){
hist(cellIntensity(imc)[i,],xlab='Normalized intensity',main=sapply(strsplit(i,"_"),function(x)x[2]))
}
## append metadata
metadata(imc)$key<-key
## append column data to experiment.
## FIX ME: need a flexible way to drop out ROIID and subset out to match all slots.
patientData<-DataFrame(colData(imc),key[match(colData(imc)$ROIID,key$ROIID),])
colData(imc)<-patientData
###set up rowData
exper_info<-key[,c("Name","Treatment")]
colnames(exper_info)<-c("sample_id","group_id")
marker_info<-data.frame(channel_name=sapply(strsplit(rownames(imc),"_"),function(x) x[3]),
marker_name=rownames(imc),
marker_class=c(rep("type",16),
rep("state",15),
rep("none",4)))
marker_info$metal<-substring(marker_info$channel_name,1,2)
marker_info$mass<-as.numeric(substring(marker_info$channel_name,3,nchar(marker_info$channel_nam)))
marker_info[which(marker_info$channel_name=='ArAr80'),'mass']<-80
rowData(imc)<-marker_info
load("C:/Users/UOSC/Documents/IMC-Ranalysis/multiple-myeloma/phenotype-analysis-7-27/imc12_batch12_container.RData")
library(pwr)
library(ggplot2)
library(hrbrthemes)
cd8s<-colorRampPalette(c("darkseagreen","green"),20)
cd4s<-colorRampPalette(c("lightsteelblue1","blue"),20)
macs<-colorRampPalette(c("magenta","maroon4"),20)
tregs<-colorRampPalette(c("plum2","purple"),20)
tumrs<-colorRampPalette(c("grey24","grey64"),20)
endo<-colorRampPalette(c("pink","red"),20)
myl<-colorRampPalette(c("cadetblue","aquamarine"),20)
##conventional small effect size
small<-cohen.ES(test = "p", size = "small")
medium<-cohen.ES(test = "p", size = "medium")
phenos<-getNetwork(imc12)
phenos$ROIID<-colData(imc12)$ROIID
props<-100*prop.table(table(phenos$subtype[!grepl("uncharacter",phenos$subtype)]))
props<-props[order(props)]
props<-data.frame(props)
colnames(props)<-c("subtype","perc")
props$main<-sapply(strsplit(as.character(props$subtype),"_"),function(x) x[1])
props<-props[order(props$main),]
main.avg<-props[,-1]%>%group_by(main)%>%summarise_all(mean)%>%data.frame
main.sd<- props[,-1]%>%group_by(main)%>%summarise_all(sd)
props$main.avg<-main.avg$perc[match(props$main,main.avg$main)]
props$main.sd<-main.sd$perc[match(props$main,main.sd$main)]
props$effect<-abs(props$perc-props$main.avg)/props$main.sd
mainEff<-props%>%group_by(main)%>%summarise_all(mean)
sdEff<-props[,-1]%>%group_by(main)%>%summarise_all(sd)
mainEff<-data.frame(main=mainEff$main,effect=mainEff$effect,sd.effect=sdEff$effect)
mainColor<-c(tumrs(1),
cd4s(1),
endo(1),
macs(1),
cd8s(1),
myl(1),
tregs(1))
###estimate the average effect within a TME group
p<- ggplot(mainEff, aes(x=main, y=effect, fill=main)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=effect, ymax=effect+sd.effect/sqrt(14)), width=.2,
position=position_dodge(.9))+coord_flip()+theme_ipsum(base_family="Arial")+scale_fill_manual(values=mainColor)+ylab("Average abundance effect")+xlab("TME compartment")
p
mainEff
mainColor
mainColor<-c(tumrs(1),
cd4s(1),
endo(1),
macs(1),
cd8s(1),
myl(1),
tregs(3))
###estimate the average effect within a TME group
p<- ggplot(mainEff, aes(x=main, y=effect, fill=main)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=effect, ymax=effect+sd.effect/sqrt(14)), width=.2,
position=position_dodge(.9))+coord_flip()+theme_ipsum(base_family="Arial")+scale_fill_manual(values=mainColor)+ylab("Average abundance effect")+xlab("TME compartment")
p
mainColor<-c(tumrs(1),
cd4s(1),
endo(1),
macs(1),
cd8s(1),
myl(2),
tregs(3))
###estimate the average effect within a TME group
p<- ggplot(mainEff, aes(x=main, y=effect, fill=main)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=effect, ymax=effect+sd.effect/sqrt(14)), width=.2,
position=position_dodge(.9))+coord_flip()+theme_ipsum(base_family="Arial")+scale_fill_manual(values=mainColor)+ylab("Average abundance effect")+xlab("TME compartment")
p
phenoColors1<-c(tumrs(11),
cd4s(18),
endo(14),
macs(20),
cd8s(19),
myl(19),
tregs(16))
names(phenoColors1)<-as.character(props$subtype)
cohen.ES(test = "t", size = "medium")
### TME prevalence
ggplot(props, aes(fill=subtype, y=perc, x=main)) +
geom_bar(position="stack", stat="identity",colour='black')+scale_fill_manual(values=phenoColors1)+theme_ipsum(base_family="Arial")+ylab("Sub-group prevalence (%)")+xlab("TME compartment")+theme(legend.position="none")
pairedn <- seq(35,100,1)
pairPower<-sapply(abs(mainEff$effect), function(x) pwr.t.test(d=x/2, power=0.80, sig.level = 0.05,type="paired")$n)
pairPower<-data.frame(n1=pairPower,effect=(mainEff$effect))
pairPower$main<-mainEff$main
ggplot(pairPower,aes(x=effect,y=n1,colour=main))+geom_point(size=3.5)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect average effect size")+xlab("Power")+ylab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")+scale_y_continuous(breaks = round(seq(35, 58, by = 2),1))
ggplot(pairPower,aes(x=effect,y=n1,colour=main))+geom_point(size=3.5)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect average effect size")+xlab("Power")+ylab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")+scale_y_continuous(breaks = round(seq(35, 58, by = 2),1))+scale_fill_manual(values=mainColor)
head(pairPower)
ggplot(pairPower,aes(x=effect,y=n1,colour=main))+geom_point(size=3.5)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect average effect size")+xlab("Power")+ylab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")+scale_y_continuous(breaks = round(seq(35, 58, by = 2),1))+scale_colour_manual(values=mainColor)
phenoColors1<-c(tumrs(20),
cd4s(18),
endo(20),
macs(20),
cd8s(19),
myl(20),
tregs(20))
names(phenoColors1)<-as.character(props$subtype)
cohen.ES(test = "t", size = "medium")
### TME prevalence
ggplot(props, aes(fill=subtype, y=perc, x=main)) +
geom_bar(position="stack", stat="identity",colour='black')+scale_fill_manual(values=phenoColors1)+theme_ipsum(base_family="Arial")+ylab("Sub-group prevalence (%)")+xlab("TME compartment")+theme(legend.position="none")
ggplot(props, aes( y=perc, x=main)) +
geom_bar(position="stack", stat="identity",colour='black')+theme_ipsum(base_family="Arial")+ylab("Sub-group prevalence (%)")+xlab("TME compartment")+theme(legend.position="none")
props
head(props)
ggplot(props, aes(fill=main, y=perc, x=main)) +
geom_bar(position="stack", stat="identity",colour='black')+theme_ipsum(base_family="Arial")+ylab("Sub-group prevalence (%)")+xlab("TME compartment")+theme(legend.position="none")+scale_fill_manual(values=mainColor)
pairPower<-sapply(effects, function(x) pwr.t.test(n=75,d=x,  sig.level = 0.05,type="paired")$power)
res<-data.frame(effect=as.numeric(effects),power=as.numeric(pairPower),row.names=names(effects))
res<-res[order(res$power),]
##assign colors.
tsn<-res
tsn$primary.phenotype<-as.character(rownames(tsn))
tsn$primary.phenotype<-factor(tsn$primary.phenotype)
phenoColors<-c(tumrs(2),
cd4s(13),
endo(4),
macs(10),
cd8s(11),
myl(11),
tregs(12))
names(phenoColors)<-levels(factor(tsn$primary.phenotype))
ggplot(tsn,aes(x=effect,y=power,colour=primary.phenotype))+geom_point(size=3)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power for differences between typical sub-groups (N=75)")+xlab("Standardized effects size")+ylab("Power")+geom_hline(yintercept=0.8,colour="red",linetype="dashed")+scale_colour_manual(values=phenoColors)
res
pairPower<-sapply(effects, function(x) pwr.t.test(n=75,d=x,  sig.level = 0.05,type="paired")$power)
effects
mainEff
pairPower<-sapply(mainEff$effect, function(x) pwr.t.test(n=75,d=x,  sig.level = 0.05,type="paired")$power)
pairPower
pairPower<-sapply(mainEff$effect, function(x) pwr.t.test(n=75,d=x,  sig.level = 0.05,type="paired")$power)
res<-data.frame(effect=as.numeric(mainEff$effect),power=as.numeric(pairPower),row.names=names(effects))
res<-res[order(res$power),]
##assign colors.
tsn<-res
tsn$primary.phenotype<-as.character(rownames(tsn))
tsn$primary.phenotype<-factor(tsn$primary.phenotype)
phenoColors<-c(tumrs(2),
cd4s(13),
endo(4),
macs(10),
cd8s(11),
myl(11),
tregs(12))
names(phenoColors)<-levels(factor(tsn$primary.phenotype))
ggplot(tsn,aes(x=effect,y=power,colour=primary.phenotype))+geom_point(size=3)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power for differences between typical sub-groups (N=75)")+xlab("Standardized effects size")+ylab("Power")+geom_hline(yintercept=0.8,colour="red",linetype="dashed")+scale_colour_manual(values=phenoColors)
effects
mainEff
pairPower
cohen.ES(test = "t", size = "medium")
ggplot(pairPower,aes(x=effect,y=n1,colour=main))+geom_point(size=3.5)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect average effect size")+xlab("Power")+ylab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")+scale_y_continuous(breaks = round(seq(35, 58, by = 2),1))+scale_colour_manual(values=mainColor)
pairedn <- seq(35,100,1)
pairPower<-sapply(abs(mainEff$effect), function(x) pwr.t.test(d=x/2, power=0.80, sig.level = 0.05,type="paired")$n)
pairPower<-data.frame(n1=pairPower,effect=(mainEff$effect))
pairPower$main<-mainEff$main
ggplot(pairPower,aes(x=effect,y=n1,colour=main))+geom_point(size=3.5)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect average effect size")+xlab("Power")+ylab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")+scale_y_continuous(breaks = round(seq(35, 58, by = 2),1))+scale_colour_manual(values=mainColor)
effects
pairPower<-sapply(pairedn, function(x) pwr.t.test(n=x,d=effects[1],  sig.level = 0.05,type="paired")$power)
pairPower2<-sapply(pairedn, function(x) pwr.t.test(n=x,d=effects[2],  sig.level = 0.05,type="paired")$power)
pairPower3<-sapply(pairedn, function(x) pwr.t.test(n=x,d=effects[3],  sig.level = 0.05,type="paired")$power)
pairPower<-data.frame(n1=pairedn,
rareMyeloid=pairPower,
moderateMacrophage=pairPower2,
moderateCD4=pairPower3
)
fram<-melt(pairPower,id.vars="n1")
ggplot(fram,aes(x=value,y=n1,fill=variable))+geom_point(fill=variable)+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect small effect size")+ylab("Power")+xlab("Sample size per group")+geom_vline(xintercept=0.8,colour="red",linetype="dashed")
?cohen.ES
cohen.ES(test = "p", size = "medium")
pwr.2p.test(n=75,h=0.35,  sig.level = 0.05,alternative = "greater")
pairPower<-sapply(pairedn, function(x) pwr.2p.test(n=x,h=0.35,  sig.level = 0.05,alternative = "greater")$power)
pairPower<-data.frame(n1=pairedn,
power=pairPower
)
ggplot(pairPower,aes(x=n1,y=power))+geom_point()+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect small effect size")+ylab("Power")+xlab("Sample size per group")+geom_hline(yintercept=0.8,colour="red",linetype="dashed")
pairPower<-sapply(pairedn, function(x) pwr.2p.test(n=x,h=0.45,  sig.level = 0.05,alternative = "greater")$power)
pairPower<-data.frame(n1=pairedn,
power=pairPower
)
ggplot(pairPower,aes(x=n1,y=power))+geom_point()+theme_ipsum(base_family="Arial")+ggtitle("Estimated power to detect small effect size")+ylab("Power")+xlab("Sample size per group")+geom_hline(yintercept=0.8,colour="red",linetype="dashed")
?cohen.ES
cohen.ES(test = "f2", size = "medium")
?pwr.f2.test
pwr.f2.test(u=3,v=15,f2=0.15,  sig.level = 0.05)
?power.anova.test
mainEff
var(mainEff$sd.effect)
mean(mainEff$sd.effect)
props
head(props)
var(props$main.avg)
power.anova.test(groups=3,n=75,between.var= var(props$main.avg), within.var=mean(mainEff$sd.effect), sig.level = 0.05)
head(props)
mean(props$main.avg)
power.anova.test(groups=3,n=75,between.var= mean(props$main.avg), within.var=mean(mainEff$sd.effect), sig.level = 0.05)
var(props$perc)
power.anova.test(groups=3,n=75,between.var= var(props$perc), within.var=mean(mainEff$sd.effect), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.25, within.var=mean(mainEff$sd.effect), sig.level = 0.05)
mean(mainEff$sd.effect)
mean(mainEff$sd.effect^2)
props%>%head
var(props$effect)
power.anova.test(groups=3,n=75,between.var= 0.25, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
var(props$perc)
mean(props$perc)
power.anova.test(groups=3,n=75,between.var= mean(props$perc), within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 1, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 5, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.09, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.05, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
head(mm)
head(props)
head(phenos)
head(props)
head(phenos)
phenos%>%group_by(ROIID)%>%summarise(n=())
phenos%>%group_by(ROIID)%>%summarise(n=()
phenos%>%group_by(ROIID)%>%summarise(n=())
phenos%>%group_by(ROIID)%>%summarise(n=n())
phenos%>%group_by(ROIID)%>%summarise(n=n(),sd=sd)
phenos%>%group_by(ROIID)%>%summarise(n=n())
head(phens)
head(phenos)
phenos%>%group_by(ROIID,subtype)%>%summarise(n=n())
d<- phenos%>%group_by(ROIID,subtype)%>%summarise(n=n())
d
d%>%group_by(ROIID,subtype)%>%summarise(SD=sd(n))
d%>%group_by(subtype)%>%summarise(SD=sd(n))
vv<-d%>%group_by(subtype)%>%summarise(SD=sd(n))
head(v)
head(vv)
vv$SD
vv$SD^2
vv<-d%>%group_by(subtype)%>%summarise(Var=var(n))
vv
vv<-d%>%group_by(subtype)%>%summarise(Var=var(n))
head(vv)
mean(vv$Var)
var(vv$Var)
mean(vv$Var)
props
head(phenos)
props%>%group_by(ROIID,subtype)%>%summarise(N=n())
phenos%>%group_by(ROIID,subtype)%>%summarise(N=n())
cc<-phenos%>%group_by(ROIID,subtype)%>%summarise(N=n())
head(cc)
cc%>%group_by(ROIID)%>%summarise(tot=sum(N))
cc%>%group_by(ROIID)%>%summarise(tot=sum(N),sd=sd(N))
cc%>%group_by(ROIID)%>%summarise(tot=sum(N),sd=sd(N),prop=N/sum(N))
cc%>%group_by(ROIID)%>%summarise(tot=sum(N),sd=sd(N),prop=100*N/sum(N),SDp=sd(prop))
cc%>%group_by(ROIID)%>%summarise(tot=sum(N),sd=sd(N),prop=100*N/sum(N)
)
cc%>%group_by(ROIID)%>%summarise(tot=sum(N),sd=sd(N))
head(phenos)
table(phenos$ROIID,phenos$subtype)
table(phenos$ROIID,phenos$subtype)
cc<-table(phenos$ROIID,phenos$subtype)
cc<-100*cc/rowSums(cc)
head(cc)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
head(cc)
mean(cc)
cc$ROIID
cc<-table(phenos$ROIID,phenos$subtype)
cc<-100*cc/rowSums(cc)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
cc<-as.data.frame(cc)
cc$ROIID
head(cc)
cc<-table(phenos$ROIID,phenos$subtype)
cc<-100*cc/rowSums(cc)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
cc<-as.data.frame.matrix(cc)
head(cc)
cc$ROIID<-rownames(cc)
head(cc)
cc%>%group_by(ROIID)
cc%>%group_by(ROIID)%>%summarise(avg=mean())
head(cc)
melt(cc,vars="ROIID")
mean(cc)
head(cc)
colnames(cc)
mean(cc[,-203])
mean(cc[,-203])
mean(cc[,-202])
cc[,-203]
cc[,-203]%>%mean()
power.anova.test(groups=3,n=75,between.var= 6.7, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.15, within.var=mean(mainEff$sd.effect^2), sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.15, within.var=0.1, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.15, within.var=0.05, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.15, within.var=0.35, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.35, within.var=0.15, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 0.75, within.var=0.15, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 3.75, within.var=0.15, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 6.75, within.var=0.15, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 6.75, within.var=3.15, sig.level = 0.05)
power.anova.test(groups=3,n=75,between.var= 6.75, within.var=3.15, sig.level = 0.05)
head(cc)
cc<-table(phenos$ROIID,phenos$subtype)
cc<-100*cc/rowSums(cc)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
cc<-as.data.frame.matrix(cc)
head(cc)
melt(cc)
cc2<-melt(cc)
cc2<-melt(cc)
head(cc2)
head(phenos)
cc<-table(phenos$ROIID,phenos$label)
cc<-100*cc/rowSums(cc)
cc
cc<-table(phenos$ROIID,phenos$label)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
cc<-100*cc/rowSums(cc)
head(cc)
mean(cc)
var(cc)
mean(cc)
cc<-table(phenos$ROIID,phenos$label)
cc<-cc[,!grepl("uncharacterized",colnames(cc))]
cc<-100*cc/rowSums(cc)
head(cc)
mean(cc)
colSds(cc)
mean(cc)
mean( colSds(cc))
colVars(cc)
colVars(cc)%>%mean
power.anova.test(groups=3,n=75,between.var= 247.2, within.var=2.52, sig.level = 0.05)
head(c)
head(cc)
colMeans(cc)
colVar(cc)
colVars(cc)
power.anova.test(groups=length(groups),n=75,between.var= var(groups), within.var=median(colVars(cc)), sig.level = 0.05)
groups<-colMeans(cc)
power.anova.test(groups=length(groups),n=75,between.var= var(groups), within.var=median(colVars(cc)), sig.level = 0.05)
groups<-colMeans(cc)
power.anova.test(groups=length(groups),power=0.9,between.var= var(groups), within.var=median(colVars(cc)), sig.level = 0.05)
groups<-colMeans(cc)
mean(cc)
colVars(cc)
colVars(cc)%>%mean
colSds(cc)%>%mean
pwr.f2.test
?pwr.f2.test
pwr.f2.test(u=3,v=10,f2=0.15,sig.level=0.05,power=0.8)
pwr.f2.test(u=3,v=10,f2=0.15,sig.level=0.05)
pwr.f2.test(u=2,v=10,f2=0.15,sig.level=0.05)
pwr.f2.test(u=2,v=8,f2=0.15,sig.level=0.05)
pwr.f2.test(u=2,v=8,f2=0.35,sig.level=0.05)
pwr.f2.test(u=2,v=5,f2=0.35,sig.level=0.05)
pwr.f2.test(u=2,v=5,f2=0.55,sig.level=0.05)
pwr.f2.test(u=2,v=4,f2=0.55,sig.level=0.05)
pwr.f2.test(u=2,v=4,f2=0.55/(1-0.55),sig.level=0.05)
pwr.f2.test(u=2,v=4,f2=0.15/(1-0.15),sig.level=0.05)
pwr.f2.test(u=2,v=4,f2=0.65/(1-0.65),sig.level=0.05)
pwr.f2.test(u=1,v=4,f2=0.65/(1-0.65),sig.level=0.05)
pwr.f2.test(u=1,v=10,f2=0.65/(1-0.65),sig.level=0.05)
pwr.f2.test(u=1,v=8,f2=0.65/(1-0.65),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.65/(1-0.65),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.25/(1-0.25),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.45/(1-0.45),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.4,sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.6,sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.15/(1-0.15),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.55/(1-0.55),sig.level=0.05)
pwr.f2.test(u=1,v=7,f2=0.55/(1-0.55),sig.level=0.05)
cohen.ES(test = "f2", size = "medium")
0.55/(1-0.55)
cohen.ES(test = "f2", size = "large")
0.1/(1-0.1)
pwr.f2.test(u=1,v=7,f2=0.55/(1-0.55),sig.level=0.05)
pwr.f2.test(u=1,v=4,f2=0.35,sig.level=0.05)
pwr.f2.test(u=1,v=2,f2=0.35,sig.level=0.05)
pwr.f2.test(u=1,v=10,f2=0.35,sig.level=0.05)
pwr.f2.test(u=2,v=10,f2=0.35,sig.level=0.05)
pwr.f2.test(u=1,v=15,f2=0.35,sig.level=0.05)
pwr.f2.test(u=1,v=15,f2=0.4,sig.level=0.05)
pwr.f2.test(u=1,v=20,f2=0.4,sig.level=0.05)
head(phenots)
head(phenos)
unique(phenos$subtype)
